# Generated by Django 2.2.2 on 2019-06-30 13:46

from django.db import migrations


def forward_course_abc_to_mti(apps, schema_editor):
    """
    ABC: Abstract based class.
    MTI: Multi table inheritance.
    For each ABC, create an instance of MTI with all attributes.
    Save MTI.
    Associate the speakers from ABC to the MTI.
    Delete ABC.
    """
    CourseAbc = apps.get_model('core', 'CourseOld')
    CourseMti = apps.get_model('core', 'Course')

    for abc in CourseAbc.objects.all():
        mti = CourseMti(
            title=abc.title,
            start=abc.start,
            description=abc.description,
            slots=abc.slots
        )
        mti.save()
        mti.speakers.set(abc.speakers.all())
        abc.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_auto_20190630_1334'),
    ]

    operations = [
        migrations.RunPython(forward_course_abc_to_mti),
    ]
